type Vehicule @model @auth(rules:[
  {allow: owner, queries: null}
]) {
  id: ID!
  licensePlate: String!
  description: String!
  category: String!
  vehType: String!
  mileage: Int!
  fuelType: String!

}

type MaintenanceTask @model @auth(rules:[
  {allow: owner, queries: null}
]) {
  id: ID!
  vehicule: Vehicule!
  taskType: TaskType!
  status: TaskStatus!
  duration: Int!
  comments: String!
  events: [Event] @connection(name:"MaintenanceTaskEvents")
}

type Event @model  @auth(rules:[
  {allow: owner, queries: null}
]) {
  id: ID!
  eventType: EventType!
  timestamp: AWSDateTime!
  comments: String!
  maintenanceTask: MaintenanceTask @connection(name:"MaintenanceTaskEvents")
}

enum EventType {
  TASK_CREATED
  TASK_SCHEDULED
  TASK_RESCHEDULED
  TASK_STARTED
  TASK_SUSPENDED
  TASK_RESUMED
  TASK_CANCELLED
  TASK_ENDED
  TASK_DELETED
}

enum TaskStatus {
  SCHEDULED
  INPROGRESS
  SUSPENDED
  CANCELLED
  ENDED
}

enum TaskType {
  MECHANICS1
  MECHANICS2
  MECHANICS3
  BODYWORK1
  BODYWORK2
}

type Appointment @model @auth(rules:[
  {allow: owner, queries: null}
]) {
  id: ID!
  task: MaintenanceTask!
  startDate: AWSDateTime!
  endDate: AWSDateTime!
  comments: String!
}